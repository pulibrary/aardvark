# Generated by hyrax:models:install
class FileSet < ActiveFedora::Base
  include ::Hyrax::FileSetBehavior
  include ::GeoWorks::GeoFileSetBehavior

  Hydra::Derivatives.output_file_service = PersistPairtreeDerivatives

  characterization_terms << [:color_space, :profile_name, :valid]
  delegate :color_space, :profile_name, :valid, to: :characterization_proxy

  property :replaces, predicate: ::RDF::Vocab::DC.replaces, multiple: false

  apply_schema IIIFPageSchema, ActiveFedora::SchemaIndexingStrategy.new(
    ActiveFedora::Indexers::GlobalIndexer.new([:stored_searchable, :symbol])
  )
  after_save :touch_parent_works
  before_destroy :cleanup_files

  delegate :mime_type_storage, to: :characterization_proxy
  delegate :derivative_url, to: :file_set_derivatives_service

  validates_with ViewingHintValidator

  # Use local indexer
  self.indexer = FileSetIndexer

  def self.image_mime_types
    []
  end

  def iiif_path
    IIIFPath.new(id).to_s
  end

  def to_solr(solr_doc = {})
    super.tap do |doc|
      doc["color_space_ssim"] = color_space
      doc["full_text_tesim"] = ocr_text if ocr_text.present?
      doc["ordered_by_ssim"] = ordered_by.map(&:id).to_a
      doc["profile_name_ssim"] = profile_name
      doc["replaces_ssim"] = replaces
      doc["valid_ssim"] = valid
      doc["well_formed_ssim"] = well_formed
    end
  end

  def ocr_document
    return unless persisted? && File.exist?(ocr_file.gsub("file:", ""))
    @ocr_document ||=
      begin
        file = File.open(ocr_file.gsub("file:", ""))
        HOCRDocument.new(file)
      end
  end

  def local_file
    pair = id.scan(/..?/).first(4).push(id)
    File.join(Hyrax.config.working_path, *pair, (label || id))
  end

  private

    def touch_parent_works
      TouchParentJob.perform_later(self)
    end

    def ocr_file
      derivative_url('ocr')
    end

    def ocr_text
      ocr_document.try(:text).try(:strip)
    end

    def cleanup_files
      cleanup_derivatives
      FileUtils.rm_rf(local_file)
    end

    # Override GeoConcerns method because files are no longer stored in Fedora
    def metadata_xml
      Nokogiri::XML(File.open(local_file))
    end
end
